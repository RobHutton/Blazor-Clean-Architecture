@page "/"
@using BlazingBlog.Application.Articles
@using BlazingBlog.Application.Articles.GetArticles
@using MediatR
@inject ISender Sender
@attribute [StreamRendering]

<PageTitle>Articles</PageTitle>
<h1 class ="text-3xl font-extrabold text-gray-100">Articles</h1>
<AuthorizeView>
    <a href="/article-editor" class="p-3 text-sm font-bold tracking-wide uppercase rounded text-gray-50 bg-sky-600 inline-block">Create New Article</a>
</AuthorizeView>
@if (articles is null)
{
    <p>No articles were found.</p>
}
else if (articles.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="space-y-6">
    <ul class="space-y-8 xl:space-y-10">
        @foreach(var article in articles)
        {
		    <li>
			    <article>
				    <dl>
					    <dt class="sr-only">Published on</dt>
					    <dd class="text-xs text-gray-400">
                            <time>@article.DatePublished</time>
                            <span>by @article.UserName</span>
					    </dd>
				    </dl>
				    <div class="space-y-1">
					    <h3 class="text-2xl font-bold tracking-tight">
                            <AuthorizeView>
                                <Authorized><a href="/article-editor/@article.Id" class="text-blue-100">@article.Title</a></Authorized>
                                <NotAuthorized>@article.Title</NotAuthorized>
                            </AuthorizeView>
					    </h3>
                        <p class="max-w-full dark:text-gray-800 prose prose-invert">@article.Content</p>
                        <AuthorizeView>
                            <div class="flex flex-wrap space-x-3">
                                <a href="/article-editor/@article.Id" class="text-sm text-sky-600 font-bold">Edit Article</a>
                            </div>
                        </AuthorizeView>
				    </div>
			    </article>
		    </li>
        }
    </ul>
    </div>
}
@code {
    private List<ArticleDto>? articles = new List<ArticleDto>();
    protected override async Task OnInitializedAsync()
    {
        // Delay
        // await Task.Delay(500);

        // Get
        var result = await Sender.Send(new GetArticlesQuery());

        // Set
        if (result.Success)
        {
            articles = result;
        }
        else
        {
            articles = new();
        }
    }
}
